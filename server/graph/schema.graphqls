# GraphQL schema example
#
# https://gqlgen.com/getting-started/
type ServerAnalytics {
  usernames: [String]!
  vreels: [Vreel]
  enterprises: [Enterprise]!
  userCount: Int!
}
type File {
  id: String!
  file_name: String!
  file_type: String!
  uri: String!
  file_size: Int!
}
type Files {
  file_count: Int!
  files: [File!]!
}
type Analytics {
  id: String!
  followers: Int!
  likes: Int!
  add_to_contacts: Int!
  calls: Int!
  views: Int!
  clicks: Int!
  conversion_rate: Int!
  shares: Int!
  qr_views: Int!
}

type AnalyticFragment {
  id: String!
  author: String!
  target: String!
  action: String!
  time_stamp: Int!
}

type User {
  id: String!
  account_type: String!
  liked: [String]
  companyName: String!
  title: String!
  profilePicture: String!
  linkedinUrl: String
  selfPortraitImage: String
  selfLandscapeImage: String
  following: [String]
  username: String!
  first_name: String!
  last_name: String!
  middle_initial: String!
  pagesRef: String
  prefix: String!
  suffix: String!
  email: String!
  v_email: String
  home_phone: String!
  cell_phone: String!
  work_phone: String!
  password: String!
  business_address: String!
  home_address: String!
  website: String!
  landing_page: String!
  job_title: String!
  groups: [Group!]!
  vreel: Vreel!
  files: Files!
  news: [Slide]
  note: String!
  pages: [Vreel!]!
}

type Enterprise {
  id: String
  name: String!
  owner: String!
  email: String!
  employees: [User!]!
  vreel: Vreel!
}

# Create Group - name, location, meet times?, public/private?
type Group {
  id: String!
  author: String!
  name: String!
  location: String!
  meet_times: [String!]
  private: Boolean!
  parent_group: String!
  child_groups: [Group!]
  members: [String!]
  events: [Event!]
  vreel: Vreel!
}
type Event {
  ID: String!
  author: String!
  name: String!
  thumbnail: String!
  start_time: String!
  end_time: String!
  description: String!
  location: String!
  group_id: String!
  repeat: String!
  link: String!
  groups: [String!]
}
type SlideMetaData {
  created: String!
  size: String!
}
type Title {
  header: String!
  description: String!
}
type Content {
  start_time: Int
  stop_time: Int
  background_audio_uri: String
  content_type: String!
  uri: String!
}
type CTA {
  link_header: String!
  link_type: String!
  link_url: String!
}

type Info {
  header: String!
  description: String!
  collaborators: [String!]!
  credits: [String!]!
  background_audio_credit: String!
  music_credit: String!
}

type Credit {
  credit_type: String!
  accredited_id: String!
}

type Advanced {
  info: Info!
  header: String!
  link_type: String!
  logoUrl: String
  isDarkMode: Boolean
  background_audio_source: String!
  background_audio_url: String!
}
type MoreInfo {
  title: String
  description: String
  collaborators: [String!]
  credits: [Credit!]
}
type Slide {
  id: String!
  author: String!
  content_type: String!
  logo_uri: String
  logo_visible: Boolean
  uri: String!
  slide_location: Int!
  title: Title!
  metadata: SlideMetaData!
  mobile: Content!
  desktop: Content!
  cta1: CTA!
  cta2: CTA!
  advanced: Advanced
  info: MoreInfo
}

type Contact {
  position: Int!
  header: String!
  hidden: Boolean
}

type Service {
  position: Int!
  header: String!
  info: TextArea!
  hidden: Boolean
}

type Link {
  position: Int!
  thumbnail: String!
  url: String!
  category: String!
  link_type: String!
  link_header: String!
  link_sub_header: String
  tag: String!
}

type SimpleLink {
  id: String!
  hidden: Boolean!
  position: Int!
  thumbnail: String!
  link_header: String!
  url: String!
  link_type: String!
  tag: String!
}
type SuperLink {
  id: String!
  thumbnail: String!
  link_header: String!
  link_sub_header: String!
  url: String!
  link_type: String!
  description: String!
}

type TextArea {
  header: String!
  position: Int!
  content: String!
  hidden: Boolean
}

type Videos {
  header: String!
  position: Int!
  videos: [Video!]!
  hidden: Boolean!
}

type Video {
  id: String!
  position: Int!
  cta1: CTA!
  cta2: CTA!
  desktop: Content!
  mobile: Content!
  video_header: String!
  description: String!
}

type GalleryImage {
  id: String!
  hidden: Boolean!
  position: Int
  cta1: CTA!
  cta2: CTA!
  desktop: Content!
  mobile: Content!
  image_header: String!
  description: String!
}

type Gallery {
  header: String!
  position: Int!
  images: [GalleryImage!]!
  hidden: Boolean!
}

type Socials {
  position: Int
  platform: String!
  username: String!
}

type SocialsElement {
  position: Int!
  hidden: Boolean!
  header: String!
  socials: [Socials]!
}

type Contribution {
  id: String!
  platform: String!
  link: String!
}

type ContributionsElement {
  header: String!
  contributions: [Contribution!]!
}

type SimpleLinksElement {
  header: String!
  hidden: Boolean!
  position: Int!
  links: [SimpleLink!]!
}

type Music {
  id: String!
  platform: String!
  link: String!
}

type MusicElement {
  header: String!
  music: [Music!]!
}

type VreelElements {
  text_area: TextArea
  videos: Videos
  gallery: Gallery
  services: Service
  music: MusicElement
  socials: SocialsElement
  simple_links: SimpleLinksElement
  super_links: [SuperLink]
  contact: Contact
  contributions: ContributionsElement
}
type Vreel {
  id: String!
  author: String!
  logo_uri: String
  page_title: String!
  button_uri: String
  slides: [Slide]!
  elements: VreelElements!
  simple_links: [SimpleLinksElement!]!
  slide_count: Int
  LastSlideEdited: String
  TimeLastEdited: Int
}

type MutationResponse {
  succeeded: Boolean!
  message: String!
}
type LocalSession {
  token: String!
}
type ResolvedPasswordReset {
  message: String!
  succeeded: Boolean!
}
type ResetPasswordResponse {
  message: String!
  email_exists: Boolean!
  reset_token: String!
}

type EnterpriseEmployee {
  employee: User!
  vreel: Vreel!
}

type Query {
  user(id: String): User!
  username(username: String): User!
  email(email: String!): User!
  getUserByToken(token: String!): User!
  login(input: LoginInput): LocalSession!
  slide(id: String!): Slide!
  group(id: String!, token: String!): Group!
  enterprise(id: String!): Enterprise!
  enterpriseByToken(token: String!): Enterprise!
  enterpiseEmployee(
    enterpriseName: String!
    employeeId: String!
  ): EnterpriseEmployee!
  serverAnalytics: ServerAnalytics
  analytics(id: String!): Analytics!
  analyticsFragment(id: String!): AnalyticFragment!
}

input NewEvent {
  name: String!
  thumbnail: String!
  start_time: String!
  end_time: String!
  description: String!
  location: String!
  group_id: String!
  repeat: String!
  link: String!
  groups: [String!]
}

input NewUser {
  username: String!
  account_type: String!
  first_name: String
  last_name: String
  email: String!
  phone_number: String
  password: String
  business_address: String
  billing_address: String
  website: String
  job_title: String
}

input ResetPasswordInput {
  email: String!
}

input LoginInput {
  email: String!
  password: String!
}

input NewGroup {
  token: String!
  name: String!
  location: String!
  meet_times: [String!]
  private: Boolean!
  parent_group: String!
}

input CreateSlide {
  content_type: String!
  uri: String!
  slide_location: Int!
}

input VreelFields {
  field: String!
  value: String!
}
input NewEnterprise {
  name: String!
  # owner: String!
  email: String!
  password: String!
}
input AnalyticsMutation {
  target: String!
  token: String!
}
input SimpleLinkInput {
  position: Int!
  thumbnail: String!
  link_header: String!
  url: String!
  link_type: String!
  tag: String!
}
input SuperLinkInput {
  thumbnail: String!
  link_header: String!
  link_sub_header: String!
  url: String!
  link_type: String!
  description: String!
}
input SocialsInput {
  position: Int!
  platform: String!
  username: String!
}

input ContributionsInput {
  platform: String!
  link: String!
}

input MusicInput {
  platform: String!
  link: String!
}

input CTAInput {
  link_header: String!
  link_type: String!
  link_url: String!
}

input ContentInput {
  start_time: Int
  stop_time: Int
  background_audio_uri: String
  content_type: String!
  uri: String!
}

input AddVideoInput {
  position: Int
  cta1: CTAInput!
  cta2: CTAInput!
  desktop: ContentInput!
  mobile: ContentInput!
  video_header: String!
  description: String!
}
input AddGalleryImageInput {
  position: Int
  cta1: CTAInput!
  cta2: CTAInput!
  desktop: ContentInput!
  mobile: ContentInput!
  image_header: String!
  description: String!
}

input TitleInput {
  header: String
  description: String
}

input SlideInput {
  slide_location: Int
  title: TitleInput
  mobile: CTAInput
  desktop: CTAInput
}

type Mutation {
  register(input: NewUser!): User!
  editSlide(
    token: String!
    slideId: String!
    slide: SlideInput!
  ): MutationResponse!
  createEvent(token: String!, input: NewEvent!): Event!
  removeUser(id: String!): MutationResponse!
  resetElements(token: String!): MutationResponse!
  createEnterprise(input: NewEnterprise!): Enterprise!
  createResetPasswordRequestIntent(email: String!): ResetPasswordResponse!
  resolveResetPasswordRequestIntent(
    token: String!
    password: String!
  ): ResolvedPasswordReset!
  createGroup(input: NewGroup): Group!
  createSlide(token: String!): Slide!
  removeSocialLink(
    token: String!
    platform: String!
    vreelId: String
  ): MutationResponse!
  deleteGroup(id: String!, token: String!): MutationResponse!
  addUserToGroup(
    token: String!
    groupId: String!
    userId: String!
  ): MutationResponse!
  addEmployeeToEnterprise(token: String!, newUser: NewUser!): User!
  updateEmployee(
    token: String!
    employee: String!
    fields: [VreelFields!]
  ): MutationResponse!
  removeUserFromGroup(
    token: String!
    groupId: String!
    member: String!
  ): MutationResponse!
  removeSlide(token: String!, slideId: String): MutationResponse!
  updateVreelField(token: String!, fields: [VreelFields]): MutationResponse!
  updateUser(token: String!, fields: [VreelFields!]): MutationResponse!
  updateSlide(token: String, slideId: String!, data: String!): Slide!
  likeSlide(input: AnalyticsMutation!): MutationResponse!
  unLikeSlide(input: AnalyticsMutation!): MutationResponse!
  follow(input: AnalyticsMutation!): MutationResponse!
  unFollow(input: AnalyticsMutation!): MutationResponse!
  logPageLoad(vreelId: String!): MutationResponse!
  editElementPosition(
    token: String!
    element: String!
    position: Int!
    vreelId: String
  ): MutationResponse!
  editFileName(
    token: String!
    newName: String!
    fileId: String!
  ): MutationResponse!
  removeImageFromVreelGallery(
    token: String!
    imageId: String!
    vreelId: String
  ): MutationResponse!
  deleteFile(token: String!, fileId: String!): MutationResponse!
  addSimpleVreelLink(
    token: String!
    link: SimpleLinkInput!
    vreelId: String
  ): MutationResponse!
  removeSimpleVreelLink(
    token: String!
    linkId: String!
    vreelId: String
  ): MutationResponse!
  addSuperVreelLink(
    token: String!
    link: SuperLinkInput
    vreelId: String
  ): MutationResponse!
  addSocialMediaLink(
    token: String!
    input: SocialsInput!
    vreelId: String
  ): MutationResponse!
  addImageToVreelGallery(
    token: String!
    input: AddGalleryImageInput!
    vreelId: String
  ): MutationResponse!
  addContributionLink(
    token: String!
    input: ContributionsInput!
    vreelId: String
  ): MutationResponse!
  updateVreelLogo(token: String!, uri: String!): MutationResponse!
  addMusicLink(
    token: String!
    input: MusicInput!
    vreelId: String
  ): MutationResponse!
  removeMusicLink(
    token: String!
    linkId: String!
    vreelId: String
  ): MutationResponse
  removeContributionLink(
    token: String!
    linkId: String!
    vreelId: String
  ): MutationResponse!
  addVideoToVreel(
    token: String!
    input: AddVideoInput!
    vreelId: String
  ): MutationResponse!
  removeVideoFromVreel(
    token: String!
    videoId: String!
    vreelId: String
  ): MutationResponse!
  updateSlideLocation(
    token: String!
    slideId: String
    location: Int!
  ): MutationResponse!
  setElementIsHidden(
    token: String!
    element: String!
    state: Boolean!
    vreelId: String
  ): MutationResponse!
  addPage(token: String!): MutationResponse!
  editSimpleLink(
    token: String!
    linkId: String!
    link: SimpleLinkInput!
    vreelId: String
  ): MutationResponse!
  editSocialsInput(
    token: String!
    platform: String!
    social: SocialsInput!
    vreelId: String
  ): MutationResponse!
  createSimpleLinkElement(token: String!, vreelId: String): MutationResponse!
}
